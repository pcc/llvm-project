; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -instsimplify -S | FileCheck %s

; Basic global variable

@g = external global i32
@g.ptrauth = private constant { i8*, i32, i64, i64 } { i8* bitcast (i32* @g to i8*), i32 2, i64 0, i64 0 }, section "llvm.ptrauth"

define i1 @test_external_global() {
; CHECK-LABEL: @test_external_global(
; CHECK-NEXT:    ret i1 false
;
  %tmp0 = icmp eq i8* bitcast ({ i8*, i32, i64, i64 }* @g.ptrauth to i8*), null
  ret i1 %tmp0
}

; Address discrimination

@g.ptrauth.addr = private constant { i8*, i32, i64, i64 } { i8* bitcast (i64* getelementptr (i64, i64* bitcast (i32* @g to i64*), i64 16) to i8*), i32 2, i64 ptrtoint (i32** @g_addr_ref to i64), i64 42 }, section "llvm.ptrauth"

@g_addr_ref = constant i32* bitcast ({ i8*, i32, i64, i64 }* @g.ptrauth.addr to i32*)

define i1 @test_external_global_addrdisc() {
; CHECK-LABEL: @test_external_global_addrdisc(
; CHECK-NEXT:    ret i1 false
;
  %tmp0 = icmp eq i8* bitcast ({ i8*, i32, i64, i64 }* @g.ptrauth.addr to i8*), null
  ret i1 %tmp0
}

; extern_weak global variable

@g_weak = extern_weak global i32
@g_weak.ptrauth = private constant { i8*, i32, i64, i64 } { i8* bitcast (i32* @g_weak to i8*), i32 2, i64 0, i64 0 }, section "llvm.ptrauth"

define i1 @test_extern_weak_global() {
; CHECK-LABEL: @test_extern_weak_global(
; CHECK-NEXT:    ret i1 icmp eq (i8* bitcast ({ i8*, i32, i64, i64 }* @g_weak.ptrauth to i8*), i8* null)
;
  %tmp0 = icmp eq i8* bitcast ({ i8*, i32, i64, i64 }* @g_weak.ptrauth to i8*), null
  ret i1 %tmp0
}

; Integer constant

@two.ptrauth = private constant { i8*, i32, i64, i64 } { i8* inttoptr (i64 0 to i8*), i32 0, i64 0, i64 42 }, section "llvm.ptrauth"

define i1 @test_constantint() {
; CHECK-LABEL: @test_constantint(
; CHECK-NEXT:    ret i1 icmp eq (i8* bitcast ({ i8*, i32, i64, i64 }* @two.ptrauth to i8*), i8* null)
;
  %tmp0 = icmp eq i8* bitcast ({ i8*, i32, i64, i64 }* @two.ptrauth to i8*), null
  ret i1 %tmp0
}

; Unusual constant expression

@weird.ptrauth = private constant { i8*, i32, i64, i64 } { i8* bitcast (i32* select (i1 icmp ult (i32* @g, i32* inttoptr (i64 1000000000 to i32*)), i32* @g, i32* @g_weak) to i8*), i32 0, i64 0, i64 42 }, section "llvm.ptrauth"

define i1 @test_weird_expr() {
; CHECK-LABEL: @test_weird_expr(
; CHECK-NEXT:    ret i1 icmp eq (i8* bitcast ({ i8*, i32, i64, i64 }* @weird.ptrauth to i8*), i8* null)
;
  %tmp0 = icmp eq i8* bitcast ({ i8*, i32, i64, i64 }* @weird.ptrauth to i8*), null
  ret i1 %tmp0
}
