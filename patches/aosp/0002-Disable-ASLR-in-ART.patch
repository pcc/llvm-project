From ccbc12eaa3f57442381a24449b7fc330566009a1 Mon Sep 17 00:00:00 2001
From: Peter Collingbourne <pcc@google.com>
Date: Thu, 9 Jul 2020 16:30:24 -0700
Subject: [PATCH 02/36] Disable ASLR in ART

---
 art/libartbase/base/mem_map.cc      | 2 +-
 art/runtime/gc/space/image_space.cc | 4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/art/libartbase/base/mem_map.cc b/art/libartbase/base/mem_map.cc
index aa07f1c6ef..8db10fd67e 100644
--- a/art/libartbase/base/mem_map.cc
+++ b/art/libartbase/base/mem_map.cc
@@ -134,7 +134,7 @@ uintptr_t CreateStartPos(uint64_t input) {
 #endif
 
 static uintptr_t GenerateNextMemPos() {
-#ifdef __BIONIC__
+#if 0
   uint64_t random_data;
   arc4random_buf(&random_data, sizeof(random_data));
   return CreateStartPos(random_data);
diff --git a/art/runtime/gc/space/image_space.cc b/art/runtime/gc/space/image_space.cc
index 8bfb0538cb..f5c0f6712d 100644
--- a/art/runtime/gc/space/image_space.cc
+++ b/art/runtime/gc/space/image_space.cc
@@ -111,7 +111,7 @@ static int32_t ChooseRelocationOffsetDelta(int32_t min_delta, int32_t max_delta)
   return r;
 }
 
-static int32_t ChooseRelocationOffsetDelta() {
+__attribute__((unused)) static int32_t ChooseRelocationOffsetDelta() {
   return ChooseRelocationOffsetDelta(ART_BASE_ADDRESS_MIN_DELTA, ART_BASE_ADDRESS_MAX_DELTA);
 }
 
@@ -2375,7 +2375,7 @@ class ImageSpace::BootImageLoader {
 
     // Reserve address space. If relocating, choose a random address for ALSR.
     uint8_t* addr = reinterpret_cast<uint8_t*>(
-        relocate_ ? ART_BASE_ADDRESS + ChooseRelocationOffsetDelta() : base_address);
+        relocate_ ? ART_BASE_ADDRESS + ART_BASE_ADDRESS_MIN_DELTA : base_address);
     MemMap image_reservation =
         ReserveBootImageMemory(addr, image_reservation_size + extra_reservation_size, error_msg);
     if (!image_reservation.IsValid()) {
-- 
2.29.2.729.g45daf8777d-goog

