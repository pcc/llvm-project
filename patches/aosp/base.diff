diff --git a/core/java/com/android/internal/os/ZygoteInit.java b/core/java/com/android/internal/os/ZygoteInit.java
index 2e152123c94..44ee6209f68 100644
--- a/core/java/com/android/internal/os/ZygoteInit.java
+++ b/core/java/com/android/internal/os/ZygoteInit.java
@@ -861,6 +861,9 @@ public class ZygoteInit {
                     abiList = argv[i].substring(ABI_LIST_ARG.length());
                 } else if (argv[i].startsWith(SOCKET_NAME_ARG)) {
                     zygoteSocketName = argv[i].substring(SOCKET_NAME_ARG.length());
+                    if (Os.getppid() != 1) {
+                        zygoteSocketName += "_arm64_v8a";
+                    }
                 } else {
                     throw new RuntimeException("Unknown command line argument: " + argv[i]);
                 }
@@ -895,9 +898,9 @@ public class ZygoteInit {
 
             ZygoteHooks.stopZygoteNoThreadCreation();
 
-            zygoteServer = new ZygoteServer(isPrimaryZygote);
+            zygoteServer = new ZygoteServer(zygoteSocketName);
 
-            if (startSystemServer) {
+            if (startSystemServer && Os.getppid() == 1) {
                 Runnable r = forkSystemServer(abiList, zygoteSocketName, zygoteServer);
 
                 // {@code r == null} in the parent (zygote) process, and {@code r != null} in the
@@ -908,6 +911,8 @@ public class ZygoteInit {
                 }
             }
 
+            nativeMarkPagesMergeable();
+
             Log.i(TAG, "Accepting command socket connections");
 
             // The select loop returns early in the child process after a fork and
@@ -929,6 +934,8 @@ public class ZygoteInit {
         }
     }
 
+    private native static void nativeMarkPagesMergeable();
+
     /**
      * Return {@code true} if this device configuration has another zygote.
      *
diff --git a/core/java/com/android/internal/os/ZygoteServer.java b/core/java/com/android/internal/os/ZygoteServer.java
index 8d281b7ce9a..670ef7c7744 100644
--- a/core/java/com/android/internal/os/ZygoteServer.java
+++ b/core/java/com/android/internal/os/ZygoteServer.java
@@ -169,20 +169,19 @@ class ZygoteServer {
      *
      * @param isPrimaryZygote  If this is the primary Zygote or not.
      */
-    ZygoteServer(boolean isPrimaryZygote) {
+    ZygoteServer(String zygoteSocketName) {
         mUsapPoolEventFD = Zygote.getUsapPoolEventFD();
-
-        if (isPrimaryZygote) {
-            mZygoteSocket = Zygote.createManagedSocketFromInitSocket(Zygote.PRIMARY_SOCKET_NAME);
-            mUsapPoolSocket =
-                    Zygote.createManagedSocketFromInitSocket(
-                            Zygote.USAP_POOL_PRIMARY_SOCKET_NAME);
-        } else {
-            mZygoteSocket = Zygote.createManagedSocketFromInitSocket(Zygote.SECONDARY_SOCKET_NAME);
-            mUsapPoolSocket =
-                    Zygote.createManagedSocketFromInitSocket(
-                            Zygote.USAP_POOL_SECONDARY_SOCKET_NAME);
+        mZygoteSocket = Zygote.createManagedSocketFromInitSocket(zygoteSocketName);
+
+        String usapSocketName = null;
+        if (zygoteSocketName.equals(Zygote.PRIMARY_SOCKET_NAME)) {
+            usapSocketName = Zygote.USAP_POOL_PRIMARY_SOCKET_NAME;
+        } else if (zygoteSocketName.equals(Zygote.SECONDARY_SOCKET_NAME)) {
+            usapSocketName = Zygote.USAP_POOL_SECONDARY_SOCKET_NAME;
+        } else if (zygoteSocketName.equals("zygote_arm64_v8a")) {
+            usapSocketName = "usap_pool_arm64_v8a";
         }
+        mUsapPoolSocket = Zygote.createManagedSocketFromInitSocket(usapSocketName);
 
         mUsapPoolSupported = true;
         fetchUsapPoolPolicyProps();
diff --git a/core/jni/android/graphics/Matrix.cpp b/core/jni/android/graphics/Matrix.cpp
index 755fcfb2714..bd47625bcdb 100644
--- a/core/jni/android/graphics/Matrix.cpp
+++ b/core/jni/android/graphics/Matrix.cpp
@@ -34,8 +34,7 @@ public:
 
     // ---------------- Regular JNI -----------------------------
 
-    static void finalizer(jlong objHandle) {
-        SkMatrix* obj = reinterpret_cast<SkMatrix*>(objHandle);
+    static void finalizer(SkMatrix* obj) {
         delete obj;
     }
 
diff --git a/core/jni/android/graphics/text/LineBreaker.cpp b/core/jni/android/graphics/text/LineBreaker.cpp
index a23f99af5f9..b48daab3577 100644
--- a/core/jni/android/graphics/text/LineBreaker.cpp
+++ b/core/jni/android/graphics/text/LineBreaker.cpp
@@ -63,8 +63,8 @@ static jlong nInit(JNIEnv* env, jclass /* unused */,
             jintArrayToFloatVector(env, indents)));
 }
 
-static void nFinish(jlong nativePtr) {
-    delete toNative(nativePtr);
+static void nFinish(minikin::android::StaticLayoutNative* nativePtr) {
+    delete nativePtr;
 }
 
 // CriticalNative
diff --git a/core/jni/android/graphics/text/MeasuredText.cpp b/core/jni/android/graphics/text/MeasuredText.cpp
index 68ba38b9391..a56c785b086 100644
--- a/core/jni/android/graphics/text/MeasuredText.cpp
+++ b/core/jni/android/graphics/text/MeasuredText.cpp
@@ -55,8 +55,8 @@ template<typename Ptr> static inline jlong toJLong(Ptr ptr) {
     return reinterpret_cast<jlong>(ptr);
 }
 
-static void releaseMeasuredParagraph(jlong measuredTextPtr) {
-    delete toMeasuredParagraph(measuredTextPtr);
+static void releaseMeasuredParagraph(minikin::MeasuredText* measuredTextPtr) {
+    delete measuredTextPtr;
 }
 
 // Regular JNI
diff --git a/core/jni/com_android_internal_os_Zygote.cpp b/core/jni/com_android_internal_os_Zygote.cpp
index 18be3741e80..28403b17c21 100644
--- a/core/jni/com_android_internal_os_Zygote.cpp
+++ b/core/jni/com_android_internal_os_Zygote.cpp
@@ -1714,7 +1714,10 @@ static void com_android_internal_os_Zygote_nativeInitNativeState(JNIEnv* env, jc
    */
 
   std::string android_socket_prefix(ANDROID_SOCKET_PREFIX);
-  std::string env_var_name = android_socket_prefix + (is_primary ? "zygote" : "zygote_secondary");
+  std::string env_var_name =
+      android_socket_prefix +
+      (is_primary ? (getppid() == 1 ? "zygote" : "zygote_arm64_v8a")
+                  : "zygote_secondary");
   char* env_var_val = getenv(env_var_name.c_str());
 
   if (env_var_val != nullptr) {
@@ -1724,7 +1727,10 @@ static void com_android_internal_os_Zygote_nativeInitNativeState(JNIEnv* env, jc
     ALOGE("Unable to fetch Zygote socket file descriptor");
   }
 
-  env_var_name = android_socket_prefix + (is_primary ? "usap_pool_primary" : "usap_pool_secondary");
+  env_var_name = android_socket_prefix +
+                 (is_primary ? (getppid() == 1 ? "usap_pool_primary"
+                                               : "usap_pool_arm64_v8a")
+                             : "usap_pool_secondary");
   env_var_val = getenv(env_var_name.c_str());
 
   if (env_var_val != nullptr) {
diff --git a/core/jni/com_android_internal_os_ZygoteInit.cpp b/core/jni/com_android_internal_os_ZygoteInit.cpp
index c2a5ee43dbd..36e9b1d379a 100644
--- a/core/jni/com_android_internal_os_ZygoteInit.cpp
+++ b/core/jni/com_android_internal_os_ZygoteInit.cpp
@@ -69,11 +69,38 @@ void android_internal_os_ZygoteInit_nativePreloadGraphicsDriver(JNIEnv* env, jcl
     }
 }
 
+void android_internal_os_ZygoteInit_nativeMarkPagesMergeable(JNIEnv* env) {
+#ifdef __LP64__
+   FILE *maps = fopen("/proc/self/maps", "r");
+   if (!maps) {
+       return;
+   }
+
+   char *line = nullptr;
+   size_t size = 0;
+   while (getline(&line, &size, maps) > 0) {
+       unsigned long start, end;
+       if (sscanf(line, "%lx-%lx", &start, &end) != 2) {
+           return;
+       }
+
+       madvise(reinterpret_cast<void*>(start), end - start, MADV_MERGEABLE);
+   }
+
+   free(line);
+   fclose(maps);
+
+   // kill(getpid(), SIGSTOP);
+#endif
+}
+
 const JNINativeMethod gMethods[] = {
     { "nativePreloadAppProcessHALs", "()V",
       (void*)android_internal_os_ZygoteInit_nativePreloadAppProcessHALs },
     { "nativePreloadGraphicsDriver", "()V",
       (void*)android_internal_os_ZygoteInit_nativePreloadGraphicsDriver },
+    { "nativeMarkPagesMergeable", "()V",
+      (void*)android_internal_os_ZygoteInit_nativeMarkPagesMergeable },
 };
 
 }  // anonymous namespace
diff --git a/core/jni/fd_utils.cpp b/core/jni/fd_utils.cpp
index 8fc1758c44d..a5a0f9a1ded 100644
--- a/core/jni/fd_utils.cpp
+++ b/core/jni/fd_utils.cpp
@@ -41,7 +41,9 @@ static const char* kPathWhitelist[] = {
         "/apex/com.android.tethering/javalib/framework-tethering.jar",
         "/dev/null",
         "/dev/socket/zygote",
+        "/dev/socket/zygote_arm64_v8a",
         "/dev/socket/zygote_secondary",
+        "/dev/socket/usap_pool_arm64_v8a",
         "/dev/socket/usap_pool_primary",
         "/dev/socket/usap_pool_secondary",
         "/dev/socket/webview_zygote",
